<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<FreeFlyerProjectFile xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <ProjectInformation>
    <Author></Author>
    <Source></Source>
    <FreeFlyerVersion>7.0.0.25894</FreeFlyerVersion>
    <RevisionNumber></RevisionNumber>
    <DateCreated>15:44 01/19/2015</DateCreated>
    <LastModified>17:55 02/16/2015</LastModified>
    <Title></Title>
    <Subject></Subject>
    <Category></Category>
    <Keywords></Keywords>
    <Comments></Comments>
    <Notes></Notes>
  </ProjectInformation>
  <ProjectPreferences>
    <General>
      <LockProjectFromEditing>false</LockProjectFromEditing>
    </General>
    <OnOpen>
      <ShowControlSequence>true</ShowControlSequence>
      <ShowEmptyEnvironment>false</ShowEmptyEnvironment>
      <ShowNotes>false</ShowNotes>
      <ShowHome>false</ShowHome>
      <ShowOutput>false</ShowOutput>
      <CreateBackup>false</CreateBackup>
      <BackupLocation></BackupLocation>
    </OnOpen>
    <OnRun>
      <SaveMissionPlan>false</SaveMissionPlan>
      <HideWarningMessages>false</HideWarningMessages>
    </OnRun>
  </ProjectPreferences>
  <ProjectDataFiles>
    <EarthOrientationFile useDefault="true"></EarthOrientationFile>
    <ElectronDensityCoefficientFile useDefault="true"></ElectronDensityCoefficientFile>
    <GeopotentialFile useDefault="true"></GeopotentialFile>
    <HarrisPriesterDragFile useDefault="true"></HarrisPriesterDragFile>
    <JacchiaAtmosphereModelFile useDefault="true"></JacchiaAtmosphereModelFile>
    <LeapSecondFile useDefault="true"></LeapSecondFile>
    <MagneticFieldFile useDefault="true"></MagneticFieldFile>
    <PlanetaryFile useDefault="true"></PlanetaryFile>
    <StationGeodeticsFile useDefault="true"></StationGeodeticsFile>
    <SolidTideFile useDefault="true"></SolidTideFile>
    <DSTFile useDefault="true"></DSTFile>
  </ProjectDataFiles>
  <ProjectObjects>
    <Object enabled="true">
      <SolarSystem name="FF_SolarSystem" isConstant="false" isGlobal="true">
        <Name>FF_SolarSystem</Name>
        <ComputePolarMotion>true</ComputePolarMotion>
        <ApplyUT1Correction>true</ApplyUT1Correction>
        <COUpdateInterval units="s" displayed_units="s">0</COUpdateInterval>
        <NPUpdateInterval units="s" displayed_units="s">1800</NPUpdateInterval>
        <IonosphereOptions>
          <IonosphereOptions name="FF_SolarSystem_|ionoOptions|" isConstant="false" isGlobal="true">
            <Name>FF_SolarSystem_|ionoOptions|</Name>
            <MaximumHeight units="km" displayed_units="km">1000</MaximumHeight>
            <MinimumHeight units="km" displayed_units="km">80</MinimumHeight>
            <IntegrationStepSize units="km" displayed_units="km">25</IntegrationStepSize>
            <ScaleFactor units="" displayed_units="">1</ScaleFactor>
            <Model>0</Model>
            <metadata dim="0" />
          </IonosphereOptions>
        </IonosphereOptions>
        <NoradKeplerEqTolerance units="" displayed_units="">1e-012</NoradKeplerEqTolerance>
        <metadata dim="0" />
      </SolarSystem>
    </Object>
    <Object enabled="true">
      <ConsoleWindow name="Console" isConstant="false" isGlobal="true">
        <Name>Console</Name>
        <WindowTitle>Console</WindowTitle>
        <WordWrap>false</WordWrap>
        <CurrentTextColor>0</CurrentTextColor>
        <BackColor>16777215</BackColor>
        <Dimension units="" displayed_units="">10</Dimension>
        <DockMode>1</DockMode>
        <CurrentFontType>0</CurrentFontType>
        <UseStdOut>false</UseStdOut>
        <ShowOnRun>false</ShowOnRun>
        <metadata dim="0" />
      </ConsoleWindow>
    </Object>
    <Object enabled="true">
      <Spacecraft name="Spacecraft1" isConstant="false" isGlobal="false">
        <Name>Spacecraft1</Name>
        <EpochDetails>
          <EpochSystem>UTC</EpochSystem>
          <EpochTimeZone>UTC +/- 00:00</EpochTimeZone>
          <EpochFormat>Calendar</EpochFormat>
          <EpochType>Absolute</EpochType>
          <EpochTypeInfo />
        </EpochDetails>
        <Epoch units="EpochSystem" displayed_units="EpochSystem">Jan 01 2010 00:00:00.000</Epoch>
        <ReferenceFrame>Mean of J2000 Earth Equator</ReferenceFrame>
        <CentralBody>Earth</CentralBody>
        <ElementType>Cartesian</ElementType>
        <OrbitState>
          <Cartesian>
            <X units="km" displayed_units="km">-3410.673</X>
            <Y units="km" displayed_units="km">5950.957</Y>
            <Z units="km" displayed_units="km">-1788.627</Z>
            <VX units="km/s" displayed_units="km/s">1.893006</VX>
            <VY units="km/s" displayed_units="km/s">-1.071993</VY>
            <VZ units="km/s" displayed_units="km/s">-7.176346</VZ>
          </Cartesian>
        </OrbitState>
        <Orientation>
          <AttitudeCoordinateSystem />
          <AttitudeRefFrame>LVLH</AttitudeRefFrame>
          <AttitudeSystem>EulerAngles</AttitudeSystem>
          <AttitudeState>
            <EulerAngles>
              <EulerAngle1 units="deg" displayed_units="deg">0</EulerAngle1>
              <EulerAngle2 units="deg" displayed_units="deg">0</EulerAngle2>
              <EulerAngle3 units="deg" displayed_units="deg">0</EulerAngle3>
              <EulerRate1 units="deg/s" displayed_units="deg/s">0</EulerRate1>
              <EulerRate2 units="deg/s" displayed_units="deg/s">0</EulerRate2>
              <EulerRate3 units="deg/s" displayed_units="deg/s">0</EulerRate3>
              <EulerSequence1 units="" displayed_units="">3</EulerSequence1>
              <EulerSequence2 units="" displayed_units="">1</EulerSequence2>
              <EulerSequence3 units="" displayed_units="">2</EulerSequence3>
            </EulerAngles>
          </AttitudeState>
        </Orientation>
        <PhysicalProperties>
          <DragCoeffType>0</DragCoeffType>
          <DragCoefficientTypes>
            <UseCd>
              <Cd units="" displayed_units="">2.2</Cd>
            </UseCd>
          </DragCoefficientTypes>
          <Cr units="" displayed_units="">1.4</Cr>
          <Cl units="" displayed_units="">1.2</Cl>
          <DragArea units="m^2" displayed_units="m^2">1</DragArea>
          <LiftArea units="m^2" displayed_units="m^2">1</LiftArea>
          <SRPArea units="m^2" displayed_units="m^2">1</SRPArea>
          <SatelliteId>1</SatelliteId>
        </PhysicalProperties>
        <Visualization>
          <Color>255</Color>
          <BodyScale units="" displayed_units="">100000</BodyScale>
          <TailLength units="" displayed_units="">100</TailLength>
          <HistoryMode>0</HistoryMode>
          <TickType>None</TickType>
          <Annotation></Annotation>
          <MercatorMapImage></MercatorMapImage>
          <ModelDefinitionType>0</ModelDefinitionType>
          <ModelDefinition>
            <ThreeDModelFilename>
              <ThreeDModelFile>Internal::GlobalStar</ThreeDModelFile>
            </ThreeDModelFilename>
          </ModelDefinition>
        </Visualization>
        <LaunchCoordinates>
          <LCSEpochDetails>
            <LCSEpochSystem>UTC</LCSEpochSystem>
            <LCSEpochTimeZone>UTC +/- 00:00</LCSEpochTimeZone>
            <LCSEpochFormat>Calendar</LCSEpochFormat>
            <LCSEpochType>Absolute</LCSEpochType>
            <LCSEpochTypeInfo />
          </LCSEpochDetails>
          <LCSEpoch units="LCSEpochSystem" displayed_units="LCSEpochSystem">Jan 01 2010 00:00:00.000</LCSEpoch>
          <LCSLongitude units="deg" displayed_units="deg">0</LCSLongitude>
          <LCSLatitude units="deg" displayed_units="deg">0</LCSLatitude>
        </LaunchCoordinates>
        <InertialData>
          <VehicleDryMass units="kg" displayed_units="kg">1000</VehicleDryMass>
          <VehicleDryCOGX units="m" displayed_units="m">0</VehicleDryCOGX>
          <VehicleDryCOGY units="m" displayed_units="m">0</VehicleDryCOGY>
          <VehicleDryCOGZ units="m" displayed_units="m">0</VehicleDryCOGZ>
          <VehicleDryMOI units="kg m^2" displayed_units="kg m^2" dim="3,3">
            <value>1200</value>
            <value>0</value>
            <value>0</value>
            <value>0</value>
            <value>1200</value>
            <value>0</value>
            <value>0</value>
            <value>0</value>
            <value>1200</value>
          </VehicleDryMOI>
          <MassTotal units="kg" displayed_units="kg">1990.18</MassTotal>
        </InertialData>
        <OrbitNumberCumulative units="" displayed_units="">1</OrbitNumberCumulative>
        <OrbitNumberBounded units="" displayed_units="">1</OrbitNumberBounded>
        <OrbitNumberResetNumber units="" displayed_units="">0</OrbitNumberResetNumber>
        <OrbitNumberDaily units="" displayed_units="">1</OrbitNumberDaily>
        <OrbitNumberResetLongitude units="" displayed_units="">20</OrbitNumberResetLongitude>
        <StateAdvancerType>PropFM</StateAdvancerType>
        <StateAdvancer>
          <PropFM>
            <Prop>
              <RK89 name="Spacecraft1_Propagator" isConstant="false" isGlobal="false">
                <Name>Spacecraft1_Propagator</Name>
                <StepSize units="s" displayed_units="s">300</StepSize>
                <StepJustTaken units="s" displayed_units="s">300</StepJustTaken>
                <StepToTake units="s" displayed_units="s">300</StepToTake>
                <LargeCurvature units="" displayed_units="">0</LargeCurvature>
                <FixedStep>1</FixedStep>
                <Tolerance units="" displayed_units="">1e-009</Tolerance>
                <AllowErrorViolation>false</AllowErrorViolation>
                <FM>
                  <ForceModel name="Spacecraft1_ForceModel" isConstant="false" isGlobal="false">
                    <Name>Spacecraft1_ForceModel</Name>
                    <GravitatingBodies>
                      <CelestialObjects dim="11">
                        <value>Mercury</value>
                        <value>Venus</value>
                        <value>Earth</value>
                        <value>Mars</value>
                        <value>Jupiter</value>
                        <value>Saturn</value>
                        <value>Uranus</value>
                        <value>Neptune</value>
                        <value>Pluto</value>
                        <value>Moon</value>
                        <value>Sun</value>
                      </CelestialObjects>
                      <UseBodyForce dim="(11)">
                        <value>false</value>
                        <value>false</value>
                        <value>true</value>
                        <value>false</value>
                        <value>false</value>
                        <value>false</value>
                        <value>false</value>
                        <value>false</value>
                        <value>false</value>
                        <value>true</value>
                        <value>true</value>
                      </UseBodyForce>
                      <PlanetFieldType units="" displayed_units="" dim="(11)">
                        <value>0</value>
                        <value>0</value>
                        <value>2</value>
                        <value>0</value>
                        <value>0</value>
                        <value>0</value>
                        <value>0</value>
                        <value>0</value>
                        <value>0</value>
                        <value>0</value>
                        <value>0</value>
                      </PlanetFieldType>
                      <PlanetFieldDegree units="" displayed_units="" dim="(11)">
                        <value>0</value>
                        <value>0</value>
                        <value>4</value>
                        <value>0</value>
                        <value>0</value>
                        <value>0</value>
                        <value>0</value>
                        <value>0</value>
                        <value>0</value>
                        <value>0</value>
                        <value>0</value>
                      </PlanetFieldDegree>
                      <PlanetFieldOrder units="" displayed_units="" dim="(11)">
                        <value>0</value>
                        <value>0</value>
                        <value>4</value>
                        <value>0</value>
                        <value>0</value>
                        <value>0</value>
                        <value>0</value>
                        <value>0</value>
                        <value>0</value>
                        <value>0</value>
                        <value>0</value>
                      </PlanetFieldOrder>
                      <PlanetoPotentialFilename dim="(11)">
                        <value></value>
                        <value></value>
                        <value>DEFAULT</value>
                        <value></value>
                        <value></value>
                        <value></value>
                        <value></value>
                        <value></value>
                        <value></value>
                        <value></value>
                        <value></value>
                      </PlanetoPotentialFilename>
                      <SolidTideFilename dim="(11)">
                        <value></value>
                        <value></value>
                        <value>DEFAULT</value>
                        <value></value>
                        <value></value>
                        <value></value>
                        <value></value>
                        <value></value>
                        <value></value>
                        <value></value>
                        <value></value>
                      </SolidTideFilename>
                      <UseZeroTideModel dim="(11)">
                        <value>false</value>
                        <value>false</value>
                        <value>false</value>
                        <value>false</value>
                        <value>false</value>
                        <value>false</value>
                        <value>false</value>
                        <value>false</value>
                        <value>false</value>
                        <value>false</value>
                        <value>false</value>
                      </UseZeroTideModel>
                      <SolidTideDegree units="" displayed_units="" dim="(11)">
                        <value>0</value>
                        <value>0</value>
                        <value>2</value>
                        <value>0</value>
                        <value>0</value>
                        <value>0</value>
                        <value>0</value>
                        <value>0</value>
                        <value>0</value>
                        <value>0</value>
                        <value>0</value>
                      </SolidTideDegree>
                      <SolidTideOrder units="" displayed_units="" dim="(11)">
                        <value>0</value>
                        <value>0</value>
                        <value>2</value>
                        <value>0</value>
                        <value>0</value>
                        <value>0</value>
                        <value>0</value>
                        <value>0</value>
                        <value>0</value>
                        <value>0</value>
                        <value>0</value>
                      </SolidTideOrder>
                    </GravitatingBodies>
                    <SRP>false</SRP>
                    <Atmospheric>
                      <Drag>true</Drag>
                      <DragType>1</DragType>
                      <DragSource>0</DragSource>
                      <DragDataFile>DEFAULT</DragDataFile>
                      <HPFlux>65</HPFlux>
                      <Lift>false</Lift>
                      <Rho1 units="" displayed_units="">0</Rho1>
                      <HPDragFile>DEFAULT</HPDragFile>
                    </Atmospheric>
                    <OtherAccelerations>
                      <OtherAcceleration>false</OtherAcceleration>
                      <Ux units="km/s^2" displayed_units="km/s^2">0</Ux>
                      <Uy units="km/s^2" displayed_units="km/s^2">0</Uy>
                      <Uz units="km/s^2" displayed_units="km/s^2">0</Uz>
                      <UDOTx units="km/s^3" displayed_units="km/s^3">0</UDOTx>
                      <UDOTy units="km/s^3" displayed_units="km/s^3">0</UDOTy>
                      <UDOTz units="km/s^3" displayed_units="km/s^3">0</UDOTz>
                    </OtherAccelerations>
                    <metadata dim="0" />
                  </ForceModel>
                </FM>
                <ToleranceMode>1</ToleranceMode>
                <RelativeErrorThreshold units="" displayed_units="">0.1</RelativeErrorThreshold>
                <metadata dim="0" />
              </RK89>
            </Prop>
          </PropFM>
        </StateAdvancer>
        <AHFParms>
          <AHF xsi:nil="true" />
          <AHFFilename></AHFFilename>
          <AHFFiletype>FFephem</AHFFiletype>
        </AHFParms>
        <Hardware>
          <Sensors dim="0" />
          <Tanks dim="0" />
          <Thrusters dim="0" />
          <ProximityZones dim="0" />
          <Receivers dim="0" />
          <Transponders dim="0" />
        </Hardware>
        <OD>
          <SpacecraftODProperties name="Spacecraft1_|SpacecraftODProperties|" isConstant="false" isGlobal="false">
            <Name>Spacecraft1_|SpacecraftODProperties|</Name>
            <ElementSetToProcess>Cartesian</ElementSetToProcess>
            <Cartesian>
              <CartesianOrbitStateEstimablePropertyContainer name="Spacecraft1_|SpacecraftODProperties|_|Cartesian|" isConstant="false" isGlobal="false">
                <Name>Spacecraft1_|SpacecraftODProperties|_|Cartesian|</Name>
                <X>
                  <EstimablePosition name="Spacecraft1_|SpacecraftODProperties|_|Cartesian|_|X|" isConstant="false" isGlobal="false">
                    <Name>Spacecraft1_|SpacecraftODProperties|_|Cartesian|_|X|</Name>
                    <ProcessAction>1</ProcessAction>
                    <Sigma units="km" displayed_units="km">0.05</Sigma>
                    <ProcessNoise units="km^2" displayed_units="km^2">1e-014</ProcessNoise>
                    <metadata dim="0" />
                  </EstimablePosition>
                </X>
                <Y>
                  <EstimablePosition name="Spacecraft1_|SpacecraftODProperties|_|Cartesian|_|Y|" isConstant="false" isGlobal="false">
                    <Name>Spacecraft1_|SpacecraftODProperties|_|Cartesian|_|Y|</Name>
                    <ProcessAction>1</ProcessAction>
                    <Sigma units="km" displayed_units="km">0.05</Sigma>
                    <ProcessNoise units="km^2" displayed_units="km^2">1e-014</ProcessNoise>
                    <metadata dim="0" />
                  </EstimablePosition>
                </Y>
                <Z>
                  <EstimablePosition name="Spacecraft1_|SpacecraftODProperties|_|Cartesian|_|Z|" isConstant="false" isGlobal="false">
                    <Name>Spacecraft1_|SpacecraftODProperties|_|Cartesian|_|Z|</Name>
                    <ProcessAction>1</ProcessAction>
                    <Sigma units="km" displayed_units="km">0.05</Sigma>
                    <ProcessNoise units="km^2" displayed_units="km^2">1e-014</ProcessNoise>
                    <metadata dim="0" />
                  </EstimablePosition>
                </Z>
                <VX>
                  <EstimableVelocity name="Spacecraft1_|SpacecraftODProperties|_|Cartesian|_|VX|" isConstant="false" isGlobal="false">
                    <Name>Spacecraft1_|SpacecraftODProperties|_|Cartesian|_|VX|</Name>
                    <ProcessAction>1</ProcessAction>
                    <Sigma units="km/s" displayed_units="km/s">2e-005</Sigma>
                    <ProcessNoise units="km^2/s^2" displayed_units="km^2/s^2">1e-017</ProcessNoise>
                    <metadata dim="0" />
                  </EstimableVelocity>
                </VX>
                <VY>
                  <EstimableVelocity name="Spacecraft1_|SpacecraftODProperties|_|Cartesian|_|VY|" isConstant="false" isGlobal="false">
                    <Name>Spacecraft1_|SpacecraftODProperties|_|Cartesian|_|VY|</Name>
                    <ProcessAction>1</ProcessAction>
                    <Sigma units="km/s" displayed_units="km/s">2e-005</Sigma>
                    <ProcessNoise units="km^2/s^2" displayed_units="km^2/s^2">1e-017</ProcessNoise>
                    <metadata dim="0" />
                  </EstimableVelocity>
                </VY>
                <VZ>
                  <EstimableVelocity name="Spacecraft1_|SpacecraftODProperties|_|Cartesian|_|VZ|" isConstant="false" isGlobal="false">
                    <Name>Spacecraft1_|SpacecraftODProperties|_|Cartesian|_|VZ|</Name>
                    <ProcessAction>1</ProcessAction>
                    <Sigma units="km/s" displayed_units="km/s">2e-005</Sigma>
                    <ProcessNoise units="km^2/s^2" displayed_units="km^2/s^2">1e-017</ProcessNoise>
                    <metadata dim="0" />
                  </EstimableVelocity>
                </VZ>
                <metadata dim="0" />
              </CartesianOrbitStateEstimablePropertyContainer>
            </Cartesian>
            <Equinoctial>
              <EquinoctialOrbitStateEstimablePropertyContainer name="Spacecraft1_|SpacecraftODProperties|_|Equinoctial|" isConstant="false" isGlobal="false">
                <Name>Spacecraft1_|SpacecraftODProperties|_|Equinoctial|</Name>
                <A>
                  <EstimableEquinoctialA name="Spacecraft1_|SpacecraftODProperties|_|Equinoctial|_|A|" isConstant="false" isGlobal="false">
                    <Name>Spacecraft1_|SpacecraftODProperties|_|Equinoctial|_|A|</Name>
                    <ProcessAction>1</ProcessAction>
                    <Sigma units="km" displayed_units="km">0.05</Sigma>
                    <ProcessNoise units="km^2" displayed_units="km^2">1e-014</ProcessNoise>
                    <metadata dim="0" />
                  </EstimableEquinoctialA>
                </A>
                <H>
                  <EstimablePositionComponent name="Spacecraft1_|SpacecraftODProperties|_|Equinoctial|_|H|" isConstant="false" isGlobal="false">
                    <Name>Spacecraft1_|SpacecraftODProperties|_|Equinoctial|_|H|</Name>
                    <ProcessAction>1</ProcessAction>
                    <Sigma units="" displayed_units="">1e-005</Sigma>
                    <ProcessNoise units="" displayed_units="">1e-019</ProcessNoise>
                    <metadata dim="0" />
                  </EstimablePositionComponent>
                </H>
                <K>
                  <EstimablePositionComponent name="Spacecraft1_|SpacecraftODProperties|_|Equinoctial|_|K|" isConstant="false" isGlobal="false">
                    <Name>Spacecraft1_|SpacecraftODProperties|_|Equinoctial|_|K|</Name>
                    <ProcessAction>1</ProcessAction>
                    <Sigma units="" displayed_units="">1e-005</Sigma>
                    <ProcessNoise units="" displayed_units="">1e-019</ProcessNoise>
                    <metadata dim="0" />
                  </EstimablePositionComponent>
                </K>
                <P>
                  <EstimablePositionComponent name="Spacecraft1_|SpacecraftODProperties|_|Equinoctial|_|P|" isConstant="false" isGlobal="false">
                    <Name>Spacecraft1_|SpacecraftODProperties|_|Equinoctial|_|P|</Name>
                    <ProcessAction>1</ProcessAction>
                    <Sigma units="" displayed_units="">1e-005</Sigma>
                    <ProcessNoise units="" displayed_units="">1e-019</ProcessNoise>
                    <metadata dim="0" />
                  </EstimablePositionComponent>
                </P>
                <Q>
                  <EstimablePositionComponent name="Spacecraft1_|SpacecraftODProperties|_|Equinoctial|_|Q|" isConstant="false" isGlobal="false">
                    <Name>Spacecraft1_|SpacecraftODProperties|_|Equinoctial|_|Q|</Name>
                    <ProcessAction>1</ProcessAction>
                    <Sigma units="" displayed_units="">1e-005</Sigma>
                    <ProcessNoise units="" displayed_units="">1e-019</ProcessNoise>
                    <metadata dim="0" />
                  </EstimablePositionComponent>
                </Q>
                <Longitude>
                  <EstimableEquinoctialLongitude name="Spacecraft1_|SpacecraftODProperties|_|Equinoctial|_|Longitude|" isConstant="false" isGlobal="false">
                    <Name>Spacecraft1_|SpacecraftODProperties|_|Equinoctial|_|Longitude|</Name>
                    <ProcessAction>1</ProcessAction>
                    <Sigma units="deg" displayed_units="deg">0.001</Sigma>
                    <ProcessNoise units="deg^2" displayed_units="deg^2">1e-015</ProcessNoise>
                    <metadata dim="0" />
                  </EstimableEquinoctialLongitude>
                </Longitude>
                <metadata dim="0" />
              </EquinoctialOrbitStateEstimablePropertyContainer>
            </Equinoctial>
            <Cd>
              <EstimableCoefficient name="Spacecraft1_|OD_Cd|" isConstant="false" isGlobal="false">
                <Name>Spacecraft1_|OD_Cd|</Name>
                <ProcessAction>0</ProcessAction>
                <Sigma units="" displayed_units="">0.05</Sigma>
                <ProcessNoise units="" displayed_units="">1e-009</ProcessNoise>
                <metadata dim="0" />
              </EstimableCoefficient>
            </Cd>
            <Rho1>
              <EstimableCoefficient name="Spacecraft1_|OD_Rho1|" isConstant="false" isGlobal="false">
                <Name>Spacecraft1_|OD_Rho1|</Name>
                <ProcessAction>0</ProcessAction>
                <Sigma units="" displayed_units="">0.05</Sigma>
                <ProcessNoise units="" displayed_units="">1e-009</ProcessNoise>
                <metadata dim="0" />
              </EstimableCoefficient>
            </Rho1>
            <DragEstimateOption>0</DragEstimateOption>
            <Cr>
              <EstimableCoefficient name="Spacecraft1_|OD_Cr|" isConstant="false" isGlobal="false">
                <Name>Spacecraft1_|OD_Cr|</Name>
                <ProcessAction>0</ProcessAction>
                <Sigma units="" displayed_units="">0.05</Sigma>
                <ProcessNoise units="" displayed_units="">1e-009</ProcessNoise>
                <metadata dim="0" />
              </EstimableCoefficient>
            </Cr>
            <OtherAccelerationsX>
              <EstimableAcceleration name="Spacecraft1_|OD_UX|" isConstant="false" isGlobal="false">
                <Name>Spacecraft1_|OD_UX|</Name>
                <ProcessAction>0</ProcessAction>
                <Sigma units="km/s^2" displayed_units="km/s^2">1e-006</Sigma>
                <ProcessNoise units="km^2/s^4" displayed_units="km^2/s^4">1e-015</ProcessNoise>
                <metadata dim="0" />
              </EstimableAcceleration>
            </OtherAccelerationsX>
            <OtherAccelerationsY>
              <EstimableAcceleration name="Spacecraft1_|OD_UY|" isConstant="false" isGlobal="false">
                <Name>Spacecraft1_|OD_UY|</Name>
                <ProcessAction>0</ProcessAction>
                <Sigma units="km/s^2" displayed_units="km/s^2">1e-006</Sigma>
                <ProcessNoise units="km^2/s^4" displayed_units="km^2/s^4">1e-015</ProcessNoise>
                <metadata dim="0" />
              </EstimableAcceleration>
            </OtherAccelerationsY>
            <OtherAccelerationsZ>
              <EstimableAcceleration name="Spacecraft1_|OD_UZ|" isConstant="false" isGlobal="false">
                <Name>Spacecraft1_|OD_UZ|</Name>
                <ProcessAction>0</ProcessAction>
                <Sigma units="km/s^2" displayed_units="km/s^2">1e-006</Sigma>
                <ProcessNoise units="km^2/s^4" displayed_units="km^2/s^4">1e-015</ProcessNoise>
                <metadata dim="0" />
              </EstimableAcceleration>
            </OtherAccelerationsZ>
            <PropagateCovariance>false</PropagateCovariance>
            <CovariancePropagationMethod>2</CovariancePropagationMethod>
            <Covariance>
              <SpacecraftCovariance name="Spacecraft1_|Covariance|" isConstant="false" isGlobal="false">
                <Name>Spacecraft1_|Covariance|</Name>
                <Matrix units="" displayed_units="" dim="0,0" />
                <metadata dim="0" />
              </SpacecraftCovariance>
            </Covariance>
            <metadata dim="0" />
          </SpacecraftODProperties>
        </OD>
        <metadata dim="0" />
      </Spacecraft>
    </Object>
  </ProjectObjects>
  <ProjectMissionSequence>
    <ProjectExternals />
    <ProjectCommands>
      <FreeForm enabled="true">
        <Label>Procedure: Read TLE file w/o loading</Label>
        <Line>Define Procedure pluckTLEDataFromFile(String TLEfile , Variable tle , StringArray labels , Array values);</Line>
        <Line></Line>
        <Line>	FileInterface file;</Line>
        <Line></Line>
        <Line>	String line;</Line>
        <Line>	Variable digitsPerTLE = 0;</Line>
        <Line>	StringArray elements;</Line>
        <Line></Line>
        <Line>	Variable position;</Line>
        <Line></Line>
        <Line>	String epochYear;</Line>
        <Line>	String epochDay;</Line>
        <Line>	String epochString;</Line>
        <Line>	Variable epoch;</Line>
        <Line></Line>
        <Line>	Variable i = 0;</Line>
        <Line></Line>
        <Line>	labels = {"epoch"}; // labels of the output array</Line>
        <Line></Line>
        <Line>	file.Filename = TLEfile;</Line>
        <Line>	file.ReadMode = 1;</Line>
        <Line>	file.Open();</Line>
        <Line></Line>
        <Line>	While (i &lt; tle);</Line>
        <Line></Line>
        <Line>		line = file.GetLine();</Line>
        <Line>		line = file.GetLine();</Line>
        <Line>		line = file.GetLine(); // grab three lines per TLE and discard until we arrive at target TLE</Line>
        <Line></Line>
        <Line>		i++;</Line>
        <Line></Line>
        <Line>	End;</Line>
        <Line></Line>
        <Line>//	line = file.GetLine();</Line>
        <Line>//	digitsPerTLE = line.Length+2 ;</Line>
        <Line>//	line = file.GetLine();</Line>
        <Line>//	digitsPerTLE = digitsPerTLE + line.Length+2;</Line>
        <Line>//	line = file.GetLine();</Line>
        <Line>//	digitsPerTLE = digitsPerTLE + line.Length+2; // determine the characters per TLE</Line>
        <Line>//</Line>
        <Line>//	file.SeekG(digitsPerTLE*tle,0); // move the file pointer to the beginning of the target TLE</Line>
        <Line>//	position = file.GetPosition;</Line>
        <Line></Line>
        <Line>	line = file.GetLine(); // get the title line of the target TLE</Line>
        <Line></Line>
        <Line>	line = file.GetLine(); // get the first line of the target TLE</Line>
        <Line></Line>
        <Line>	elements = line.Split(" "); // split the line into elements</Line>
        <Line></Line>
        <Line>	epochYear = elements[3].SubString(0,2);</Line>
        <Line>	epochDay = elements[3].SubString(2,12);</Line>
        <Line></Line>
        <Line>	epochString = "20" + epochYear + " " + floor(StringToFloat(epochDay)).Format("%03.0f") + " 00:00:00";</Line>
        <Line>	epoch = epochString.EpochScan("YYYY DOY hh:mm:ss");</Line>
        <Line></Line>
        <Line>	epoch = epoch + (StringToFloat(epochDay) - floor(StringToFloat(epochDay)));</Line>
        <Line></Line>
        <Line>	values[0] = epoch; // epoch of TLE in FF TAI variable format</Line>
        <Line></Line>
        <Line></Line>
        <Line>	file.Close();</Line>
        <Line>EndProcedure;</Line>
      </FreeForm>
      <FreeForm enabled="true">
        <Label>Driver</Label>
        <Line>Spacecraft TLE;</Line>
        <Line></Line>
        <Line>ForceModel fm1;</Line>
        <Line></Line>
        <Line>fm1.PlanetFieldType[2] = 2; // set earth gravity to point mass for speed TODO: make this an input</Line>
        <Line>fm1.DragType = 3; //TODO: Add solar flux file</Line>
        <Line></Line>
        <Line>RK78VOP Integrator1(fm1); // user RK78VOP for speed</Line>
        <Line></Line>
        <Line>Spacecraft prop(Integrator1);</Line>
        <Line>DifferentialCorrector myDiff;</Line>
        <Line>Variable CD;</Line>
        <Line></Line>
        <Line>String TLEfile = "C:\work\beesat.tle"; // default</Line>
        <Line>Variable numStates;</Line>
        <Line>Variable numDaysTLEs = 365; // TODO make this a user input</Line>
        <Line>//Array perigeeHeightTLE;</Line>
        <Line>Array perigeeHeightProp;</Line>
        <Line>Variable i;</Line>
        <Line>Variable j = 0;</Line>
        <Line>List&lt;Variable&gt; TLEepochList;</Line>
        <Line>TLEepochList.Count = 1;</Line>
        <Line>List&lt;Variable&gt; TLEperigeeHeight;</Line>
        <Line>TLEperigeeHeight.Count = 1;</Line>
        <Line></Line>
        <Line>Variable firstFlag = 1;</Line>
        <Line>Array firstState;</Line>
        <Line>Variable firstEpoch;</Line>
        <Line>Array finalState;</Line>
        <Line></Line>
        <Line>StringArray labels;</Line>
        <Line>Array values;</Line>
        <Line></Line>
        <Line>Variable initialCD = 50;</Line>
        <Line>Array errorArray;</Line>
        <Line>Variable error;</Line>
        <Line>Variable iteration = 0;</Line>
        <Line>Variable errCount;</Line>
        <Line></Line>
        <Line>Variable TLEepoch;</Line>
        <Line>Variable propEpoch;</Line>
        <Line></Line>
        <Line>PlotWindow TLE_hp_v_t showing TLE.Epoch, ((1-TLE.BLJ2E) * TLE.BLJ2A) - Earth.Radius;</Line>
        <Line>PlotWindow prop_hp_v_t showing prop.Epoch , prop.PerigeeHeight;</Line>
        <Line>PlotWindow targetPlot;</Line>
        <Line></Line>
        <Line>PlotScatterSeries TLE_height;</Line>
        <Line>PlotScatterSeries prop_height;</Line>
        <Line></Line>
        <Line>Array heightMileStones = {700, 650, 600, 550, 500, 400, 300};</Line>
        <Line></Line>
        <Line>targetPlot.AddSeries(TLE_height);</Line>
        <Line>targetPlot.AddSeries(prop_height);</Line>
        <Line></Line>
        <Line>////////// get input from Java GUI /////////////</Line>
        <Line>ApiLabel "readyForInput";</Line>
        <Line>////////////////////////////////////////////////</Line>
        <Line></Line>
        <Line>numStates = TLE.LoadNoradTLE(TLEfile,0);</Line>
        <Line>TLEepoch = TLE.Epoch;</Line>
        <Line>//perigeeHeightTLE.Dimension = numStates;</Line>
        <Line></Line>
        <Line>TLE.LoadNoradTLE(TLEfile,numStates-1);</Line>
        <Line></Line>
        <Line>finalState[0:2] = TLE.Position;</Line>
        <Line>finalState[3:5] = TLE.Velocity;</Line>
        <Line>finalState[6]   = TLE.Epoch;</Line>
        <Line></Line>
        <Line>TLE.LoadNoradTLE(TLEfile,0);</Line>
        <Line></Line>
        <Line>For i = 1 to numStates - 1 step 1;</Line>
        <Line></Line>
        <Line>	Call pluckTLEDataFromFile(TLEfile , i , labels , values);</Line>
        <Line></Line>
        <Line>	If ((values[0] &gt; finalState[6] - numDaysTLEs) and values[0] &gt;= TLEepoch + 1) then;</Line>
        <Line></Line>
        <Line>		TLE.LoadNoradTLE(TLEfile,i);</Line>
        <Line></Line>
        <Line>		If (firstFlag = 1) then;</Line>
        <Line>			firstState[0:2] = TLE.Position; // extract first state to initialize prop for targeting.</Line>
        <Line>			firstState[3:5] = TLE.Velocity;</Line>
        <Line>			firstState[6]   = TLE.Epoch;</Line>
        <Line>			firstFlag = 0;</Line>
        <Line>		End;</Line>
        <Line></Line>
        <Line>		TLEepoch = TLE.Epoch;</Line>
        <Line></Line>
        <Line>		Update TLE_hp_v_t;</Line>
        <Line></Line>
        <Line>		TLEperigeeHeight.Count = j+1;</Line>
        <Line>		TLEepochList.Count = j+1;</Line>
        <Line></Line>
        <Line>		TLEperigeeHeight[j] = ((1-TLE.BLJ2E) * TLE.BLJ2A) - Earth.Radius; // average perigee height kind of</Line>
        <Line>//		TLEperigeeHeight[j] = TLE.PerigeeHeight;</Line>
        <Line>		TLEepochList[j] = TLE.Epoch;</Line>
        <Line>		j++;</Line>
        <Line></Line>
        <Line></Line>
        <Line>	End;</Line>
        <Line></Line>
        <Line>End;</Line>
        <Line></Line>
        <Line>errorArray.Dimension = TLEepochList.Count;</Line>
        <Line></Line>
        <Line>ApiLabel "endOfTles";</Line>
        <Line></Line>
        <Line>/////////// target BC //////////////////</Line>
        <Line>prop.Position = firstState[0:2];</Line>
        <Line>prop.Velocity = firstState[3:5];</Line>
        <Line>prop.Epoch    = firstState[6];</Line>
        <Line>j = 0;</Line>
        <Line></Line>
        <Line>Target using myDiff;</Line>
        <Line>	Iterate prop;</Line>
        <Line>	Vary CD = initialCD + 5; // TODO: make initial CD an input</Line>
        <Line></Line>
        <Line>	prop.Cd = CD;</Line>
        <Line>	iteration++;</Line>
        <Line></Line>
        <Line>	prop_height.InsertLineBreak();</Line>
        <Line></Line>
        <Line>	//For j = 0 to TLEepochList.Count-1 step 1;</Line>
        <Line>	j = 0;</Line>
        <Line>	While (j &lt;= TLEepochList.Count-1);</Line>
        <Line></Line>
        <Line>		Try sending ErrorCount to errCount;</Line>
        <Line>			Step prop to (prop.Epoch = TLEepochList[j]);</Line>
        <Line>		End;</Line>
        <Line></Line>
        <Line>		If (errCount &gt; 0) then; // SC likely struck the Earth, time to start over and decrease CD some.</Line>
        <Line></Line>
        <Line>			Report "error! " + prop.Height.ToString;</Line>
        <Line></Line>
        <Line>			CD = CD - 5; // decrement CD by some delta TODO: make this delta configurable</Line>
        <Line>			prop.Cd = CD;</Line>
        <Line></Line>
        <Line>			j = 0;</Line>
        <Line>			prop.Position = firstState[0:2]; // reset the prop spacecraft.</Line>
        <Line>			prop.Velocity = firstState[3:5];</Line>
        <Line>			prop.Epoch    = firstState[6];</Line>
        <Line></Line>
        <Line>			errCount = 0; // reset the errCount</Line>
        <Line></Line>
        <Line>			prop_height.InsertLineBreak(); // remove the erroneous profile from the plot</Line>
        <Line>			TLE_height.ClearPoints();</Line>
        <Line></Line>
        <Line>			Continue; // return to the targeting loop</Line>
        <Line></Line>
        <Line>		End;</Line>
        <Line></Line>
        <Line>		errorArray[j] = ((1-prop.BLJ2E) * prop.BLJ2A) - Earth.Radius - TLEperigeeHeight[j];</Line>
        <Line></Line>
        <Line>		If (iteration == 1) then;</Line>
        <Line>			TLE_height.AddPoints(prop.Epoch,TLEperigeeHeight[j]);</Line>
        <Line>		End;</Line>
        <Line></Line>
        <Line>		If (iteration%2 == 1) then;</Line>
        <Line></Line>
        <Line>			prop_height.AddPoints(prop.Epoch,(1-prop.BLJ2E) * prop.BLJ2A - Earth.Radius);</Line>
        <Line></Line>
        <Line>			Update targetPlot;</Line>
        <Line></Line>
        <Line>		End;</Line>
        <Line></Line>
        <Line>		j++;</Line>
        <Line>	End;</Line>
        <Line></Line>
        <Line>	error = errorArray.Sum;</Line>
        <Line></Line>
        <Line>	Report iteration, CD, error;</Line>
        <Line></Line>
        <Line>	ApiLabel "stillTargeting";</Line>
        <Line></Line>
        <Line>	Achieve error = 0 +/- 10;	</Line>
        <Line>End;</Line>
        <Line></Line>
        <Line>prop.Epoch = TLE.Epoch;</Line>
        <Line>propEpoch = TLE.Epoch;</Line>
        <Line>prop.Position = TLE.Position;</Line>
        <Line>prop.Velocity = TLE.Velocity;</Line>
        <Line></Line>
        <Line>ApiLabel "endOfTarget";</Line>
        <Line></Line>
        <Line>i = 0;</Line>
        <Line></Line>
        <Line>While ((1-prop.BLJ2E) * prop.BLJ2A - Earth.Radius &gt; 100);</Line>
        <Line></Line>
        <Line>	Step prop;</Line>
        <Line></Line>
        <Line>	If (propEpoch + 10 &lt; prop.Epoch) then;</Line>
        <Line></Line>
        <Line>//		Plot prop.Epoch , prop.PerigeeHeight;</Line>
        <Line>		Update prop_hp_v_t;</Line>
        <Line></Line>
        <Line>		propEpoch = prop.Epoch;</Line>
        <Line></Line>
        <Line>	End;</Line>
        <Line>	</Line>
        <Line>//	If ((1-prop.BLJ2E) * prop.BLJ2A - Earth.Radius &lt; heightMileStones[i]) then;</Line>
        <Line>//		ApiLabel "milestone";</Line>
        <Line>//		i++;</Line>
        <Line>//	End;</Line>
        <Line>End;</Line>
        <Line></Line>
        <Line>Report prop.EpochFormat, (1-prop.BLJ2E) * prop.BLJ2A - Earth.Radius;</Line>
        <Line></Line>
        <Line>ApiLabel "endOfProp";</Line>
        <Line></Line>
        <Line></Line>
      </FreeForm>
    </ProjectCommands>
  </ProjectMissionSequence>
  <ProjectScript>
    <Line>Define Procedure pluckTLEDataFromFile(String TLEfile , Variable tle , StringArray labels , Array values);</Line>
    <Line></Line>
    <Line>	FileInterface file;</Line>
    <Line></Line>
    <Line>	String line;</Line>
    <Line>	Variable digitsPerTLE = 0;</Line>
    <Line>	StringArray elements;</Line>
    <Line></Line>
    <Line>	Variable position;</Line>
    <Line></Line>
    <Line>	String epochYear;</Line>
    <Line>	String epochDay;</Line>
    <Line>	String epochString;</Line>
    <Line>	Variable epoch;</Line>
    <Line></Line>
    <Line>	Variable i = 0;</Line>
    <Line></Line>
    <Line>	labels = {"epoch"}; // labels of the output array</Line>
    <Line></Line>
    <Line>	file.Filename = TLEfile;</Line>
    <Line>	file.ReadMode = 1;</Line>
    <Line>	file.Open();</Line>
    <Line></Line>
    <Line>	While (i &lt; tle);</Line>
    <Line></Line>
    <Line>		line = file.GetLine();</Line>
    <Line>		line = file.GetLine();</Line>
    <Line>		line = file.GetLine(); // grab three lines per TLE and discard until we arrive at target TLE</Line>
    <Line></Line>
    <Line>		i++;</Line>
    <Line></Line>
    <Line>	End;</Line>
    <Line></Line>
    <Line>//	line = file.GetLine();</Line>
    <Line>//	digitsPerTLE = line.Length+2 ;</Line>
    <Line>//	line = file.GetLine();</Line>
    <Line>//	digitsPerTLE = digitsPerTLE + line.Length+2;</Line>
    <Line>//	line = file.GetLine();</Line>
    <Line>//	digitsPerTLE = digitsPerTLE + line.Length+2; // determine the characters per TLE</Line>
    <Line>//</Line>
    <Line>//	file.SeekG(digitsPerTLE*tle,0); // move the file pointer to the beginning of the target TLE</Line>
    <Line>//	position = file.GetPosition;</Line>
    <Line></Line>
    <Line>	line = file.GetLine(); // get the title line of the target TLE</Line>
    <Line></Line>
    <Line>	line = file.GetLine(); // get the first line of the target TLE</Line>
    <Line></Line>
    <Line>	elements = line.Split(" "); // split the line into elements</Line>
    <Line></Line>
    <Line>	epochYear = elements[3].SubString(0,2);</Line>
    <Line>	epochDay = elements[3].SubString(2,12);</Line>
    <Line></Line>
    <Line>	epochString = "20" + epochYear + " " + floor(StringToFloat(epochDay)).Format("%03.0f") + " 00:00:00";</Line>
    <Line>	epoch = epochString.EpochScan("YYYY DOY hh:mm:ss");</Line>
    <Line></Line>
    <Line>	epoch = epoch + (StringToFloat(epochDay) - floor(StringToFloat(epochDay)));</Line>
    <Line></Line>
    <Line>	values[0] = epoch; // epoch of TLE in FF TAI variable format</Line>
    <Line></Line>
    <Line></Line>
    <Line>	file.Close();</Line>
    <Line>EndProcedure;</Line>
    <Line>Spacecraft TLE;</Line>
    <Line></Line>
    <Line>ForceModel fm1;</Line>
    <Line></Line>
    <Line>fm1.PlanetFieldType[2] = 2; // set earth gravity to point mass for speed TODO: make this an input</Line>
    <Line>fm1.DragType = 3; //TODO: Add solar flux file</Line>
    <Line></Line>
    <Line>RK78VOP Integrator1(fm1); // user RK78VOP for speed</Line>
    <Line></Line>
    <Line>Spacecraft prop(Integrator1);</Line>
    <Line>DifferentialCorrector myDiff;</Line>
    <Line>Variable CD;</Line>
    <Line></Line>
    <Line>String TLEfile = "C:\work\beesat.tle"; // default</Line>
    <Line>Variable numStates;</Line>
    <Line>Variable numDaysTLEs = 365; // TODO make this a user input</Line>
    <Line>//Array perigeeHeightTLE;</Line>
    <Line>Array perigeeHeightProp;</Line>
    <Line>Variable i;</Line>
    <Line>Variable j = 0;</Line>
    <Line>List&lt;Variable&gt; TLEepochList;</Line>
    <Line>TLEepochList.Count = 1;</Line>
    <Line>List&lt;Variable&gt; TLEperigeeHeight;</Line>
    <Line>TLEperigeeHeight.Count = 1;</Line>
    <Line></Line>
    <Line>Variable firstFlag = 1;</Line>
    <Line>Array firstState;</Line>
    <Line>Variable firstEpoch;</Line>
    <Line>Array finalState;</Line>
    <Line></Line>
    <Line>StringArray labels;</Line>
    <Line>Array values;</Line>
    <Line></Line>
    <Line>Variable initialCD = 50;</Line>
    <Line>Array errorArray;</Line>
    <Line>Variable error;</Line>
    <Line>Variable iteration = 0;</Line>
    <Line>Variable errCount;</Line>
    <Line></Line>
    <Line>Variable TLEepoch;</Line>
    <Line>Variable propEpoch;</Line>
    <Line></Line>
    <Line>PlotWindow TLE_hp_v_t showing TLE.Epoch, ((1-TLE.BLJ2E) * TLE.BLJ2A) - Earth.Radius;</Line>
    <Line>PlotWindow prop_hp_v_t showing prop.Epoch , prop.PerigeeHeight;</Line>
    <Line>PlotWindow targetPlot;</Line>
    <Line></Line>
    <Line>PlotScatterSeries TLE_height;</Line>
    <Line>PlotScatterSeries prop_height;</Line>
    <Line></Line>
    <Line>Array heightMileStones = {700, 650, 600, 550, 500, 400, 300};</Line>
    <Line></Line>
    <Line>targetPlot.AddSeries(TLE_height);</Line>
    <Line>targetPlot.AddSeries(prop_height);</Line>
    <Line></Line>
    <Line>////////// get input from Java GUI /////////////</Line>
    <Line>ApiLabel "readyForInput";</Line>
    <Line>////////////////////////////////////////////////</Line>
    <Line></Line>
    <Line>numStates = TLE.LoadNoradTLE(TLEfile,0);</Line>
    <Line>TLEepoch = TLE.Epoch;</Line>
    <Line>//perigeeHeightTLE.Dimension = numStates;</Line>
    <Line></Line>
    <Line>TLE.LoadNoradTLE(TLEfile,numStates-1);</Line>
    <Line></Line>
    <Line>finalState[0:2] = TLE.Position;</Line>
    <Line>finalState[3:5] = TLE.Velocity;</Line>
    <Line>finalState[6]   = TLE.Epoch;</Line>
    <Line></Line>
    <Line>TLE.LoadNoradTLE(TLEfile,0);</Line>
    <Line></Line>
    <Line>For i = 1 to numStates - 1 step 1;</Line>
    <Line></Line>
    <Line>	Call pluckTLEDataFromFile(TLEfile , i , labels , values);</Line>
    <Line></Line>
    <Line>	If ((values[0] &gt; finalState[6] - numDaysTLEs) and values[0] &gt;= TLEepoch + 1) then;</Line>
    <Line></Line>
    <Line>		TLE.LoadNoradTLE(TLEfile,i);</Line>
    <Line></Line>
    <Line>		If (firstFlag = 1) then;</Line>
    <Line>			firstState[0:2] = TLE.Position; // extract first state to initialize prop for targeting.</Line>
    <Line>			firstState[3:5] = TLE.Velocity;</Line>
    <Line>			firstState[6]   = TLE.Epoch;</Line>
    <Line>			firstFlag = 0;</Line>
    <Line>		End;</Line>
    <Line></Line>
    <Line>		TLEepoch = TLE.Epoch;</Line>
    <Line></Line>
    <Line>		Update TLE_hp_v_t;</Line>
    <Line></Line>
    <Line>		TLEperigeeHeight.Count = j+1;</Line>
    <Line>		TLEepochList.Count = j+1;</Line>
    <Line></Line>
    <Line>		TLEperigeeHeight[j] = ((1-TLE.BLJ2E) * TLE.BLJ2A) - Earth.Radius; // average perigee height kind of</Line>
    <Line>//		TLEperigeeHeight[j] = TLE.PerigeeHeight;</Line>
    <Line>		TLEepochList[j] = TLE.Epoch;</Line>
    <Line>		j++;</Line>
    <Line></Line>
    <Line></Line>
    <Line>	End;</Line>
    <Line></Line>
    <Line>End;</Line>
    <Line></Line>
    <Line>errorArray.Dimension = TLEepochList.Count;</Line>
    <Line></Line>
    <Line>ApiLabel "endOfTles";</Line>
    <Line></Line>
    <Line>/////////// target BC //////////////////</Line>
    <Line>prop.Position = firstState[0:2];</Line>
    <Line>prop.Velocity = firstState[3:5];</Line>
    <Line>prop.Epoch    = firstState[6];</Line>
    <Line>j = 0;</Line>
    <Line></Line>
    <Line>Target using myDiff;</Line>
    <Line>	Iterate prop;</Line>
    <Line>	Vary CD = initialCD + 5; // TODO: make initial CD an input</Line>
    <Line></Line>
    <Line>	prop.Cd = CD;</Line>
    <Line>	iteration++;</Line>
    <Line></Line>
    <Line>	prop_height.InsertLineBreak();</Line>
    <Line></Line>
    <Line>	//For j = 0 to TLEepochList.Count-1 step 1;</Line>
    <Line>	j = 0;</Line>
    <Line>	While (j &lt;= TLEepochList.Count-1);</Line>
    <Line></Line>
    <Line>		Try sending ErrorCount to errCount;</Line>
    <Line>			Step prop to (prop.Epoch = TLEepochList[j]);</Line>
    <Line>		End;</Line>
    <Line></Line>
    <Line>		If (errCount &gt; 0) then; // SC likely struck the Earth, time to start over and decrease CD some.</Line>
    <Line></Line>
    <Line>			Report "error! " + prop.Height.ToString;</Line>
    <Line></Line>
    <Line>			CD = CD - 5; // decrement CD by some delta TODO: make this delta configurable</Line>
    <Line>			prop.Cd = CD;</Line>
    <Line></Line>
    <Line>			j = 0;</Line>
    <Line>			prop.Position = firstState[0:2]; // reset the prop spacecraft.</Line>
    <Line>			prop.Velocity = firstState[3:5];</Line>
    <Line>			prop.Epoch    = firstState[6];</Line>
    <Line></Line>
    <Line>			errCount = 0; // reset the errCount</Line>
    <Line></Line>
    <Line>			prop_height.InsertLineBreak(); // remove the erroneous profile from the plot</Line>
    <Line>			TLE_height.ClearPoints();</Line>
    <Line></Line>
    <Line>			Continue; // return to the targeting loop</Line>
    <Line></Line>
    <Line>		End;</Line>
    <Line></Line>
    <Line>		errorArray[j] = ((1-prop.BLJ2E) * prop.BLJ2A) - Earth.Radius - TLEperigeeHeight[j];</Line>
    <Line></Line>
    <Line>		If (iteration == 1) then;</Line>
    <Line>			TLE_height.AddPoints(prop.Epoch,TLEperigeeHeight[j]);</Line>
    <Line>		End;</Line>
    <Line></Line>
    <Line>		If (iteration%2 == 1) then;</Line>
    <Line></Line>
    <Line>			prop_height.AddPoints(prop.Epoch,(1-prop.BLJ2E) * prop.BLJ2A - Earth.Radius);</Line>
    <Line></Line>
    <Line>			Update targetPlot;</Line>
    <Line></Line>
    <Line>		End;</Line>
    <Line></Line>
    <Line>		j++;</Line>
    <Line>	End;</Line>
    <Line></Line>
    <Line>	error = errorArray.Sum;</Line>
    <Line></Line>
    <Line>	Report iteration, CD, error;</Line>
    <Line></Line>
    <Line>	ApiLabel "stillTargeting";</Line>
    <Line></Line>
    <Line>	Achieve error = 0 +/- 10;	</Line>
    <Line>End;</Line>
    <Line></Line>
    <Line>prop.Epoch = TLE.Epoch;</Line>
    <Line>propEpoch = TLE.Epoch;</Line>
    <Line>prop.Position = TLE.Position;</Line>
    <Line>prop.Velocity = TLE.Velocity;</Line>
    <Line></Line>
    <Line>ApiLabel "endOfTarget";</Line>
    <Line></Line>
    <Line>i = 0;</Line>
    <Line></Line>
    <Line>While ((1-prop.BLJ2E) * prop.BLJ2A - Earth.Radius &gt; 100);</Line>
    <Line></Line>
    <Line>	Step prop;</Line>
    <Line></Line>
    <Line>	If (propEpoch + 10 &lt; prop.Epoch) then;</Line>
    <Line></Line>
    <Line>//		Plot prop.Epoch , prop.PerigeeHeight;</Line>
    <Line>		Update prop_hp_v_t;</Line>
    <Line></Line>
    <Line>		propEpoch = prop.Epoch;</Line>
    <Line></Line>
    <Line>	End;</Line>
    <Line>	</Line>
    <Line>//	If ((1-prop.BLJ2E) * prop.BLJ2A - Earth.Radius &lt; heightMileStones[i]) then;</Line>
    <Line>//		ApiLabel "milestone";</Line>
    <Line>//		i++;</Line>
    <Line>//	End;</Line>
    <Line>End;</Line>
    <Line></Line>
    <Line>Report prop.EpochFormat, (1-prop.BLJ2E) * prop.BLJ2A - Earth.Radius;</Line>
    <Line></Line>
    <Line>ApiLabel "endOfProp";</Line>
    <Line></Line>
    <Line></Line>
  </ProjectScript>
  <ProjectNotes></ProjectNotes>
</FreeFlyerProjectFile>